고차 함수: 다른 함수를 인자로 받거나 함수를 반환하는 함수. 코틀린에서는 람다나 함수 참조를 사용해 함수를 사용해 함수를 값으로 표현 할 수 있다.
따라서, 고차 함수는 람다나 함수 참조를 인자로 넘길 수 있거나 람다나 함수 참조를 반환하는 함수이다.

(Int, Int) ->?Int? 반환타임이 널   /  ((Int, Int)-> int!) -> 함수 타입 전체가 널
----------------------------------------------------------------------------------------------------------------------------------------------
*파라미터 이름과 함수 타입 - 함수 타입에서 파라미터 명을 지정할 수 있다. 강제적인 것은 아니며, 호출하는 쪽에서 원하는 파라미터 명으로 변경하여 사용할 수 있음
fun performRequest(
        url: String,
        callback: (code: Int, content: String) -> Unit
) {
    /* .. */
}

fun main() {
    val url = "http://www.naver.com"
    performRequest(url) { code, content -> /*..*/ } // api 에서 정의한 파라미터 명을 사용
    performRequest(url) { code, page -> /*..*/ } // 원하는 이름으로 변경해서 사용 가능
}

----------------------------------------------------------------------------------------------------------------------------------------------
*인자로 받은 함수 호출 - operation 함수를 인자로 받아 해당 함수를 실행하는 간단한 예제
fun twoAndThree(operation: (Int, Int) -> Int) {
    val result = operation(2, 3)
    println("The Result is $result")
}

fun main() {
    twoAndThree { a, b -> a + b}
    twoAndThree { a, b -> a * b}
}

----------------------------------------------------------------------------------------------------------------------------------------------
* 함수에서 함수 반환
um class Delivery { STANDARD, EXPEDITED }

class Order(val itemCount: Int)

fun getShippingCostCaculator(
        delivery: Delivery
) : (Order) -> Double {

    if (delivery == Delivery.EXPEDITED) {
        return { order -> 6 + 2.1 * order.itemCount }
    }
    return { order -> 61.2 * order.itemCount }
}

fun main() {
    val calculator = getShippingCostCaculator(Delivery.EXPEDITED)
    println("Shipping costs ${calculator(Order(3))}")
}


----------------------------------------------------------------------------------------------------------------------------------------------
